version: 1
rules:
  - name: abook
    description: ""
    dotfile:
      name: .abook
      is_dir: true
    actions:
      # guesswork
      - type: migrate
        source: ${HOME}/.abook/abookrc
        dest: ${XDG_CONFIG_HOME}/abook/abookrc
      - type: migrate
        source: ${HOME}/.abook/addressbook
        dest: ${XDG_DATA_HOME}/abook/addressbook
      - type: alias
        alias: abook
        command: abook --config "$XDG_CONFIG_HOME"/abook/abookrc --datafile "$XDG_DATA_HOME"/abook/addressbook

  - name: ack
    dotfile:
      name: .ackrc
    actions:
      - type: migrate
        source: ${HOME}/.ackrc
        dest: ${XDG_CONFIG_HOME}/ack/ackrc
      - type: export
        key: ACKRC
        value: ${XDG_CONFIG_HOME}/ack/ackrc

  - name: alsa
    dotfile:
      name: .asoundrc
    notes:
      - xdg support was added in alsa v1.2.3. Check alsa's version with 'alsactl --version'.
    actions:
      - type: migrate
        source: ${HOME}/.asoundrc
        dest: ${XDG_CONFIG_HOME}/alsa/asoundrc

  - name: aspell
    dotfile:
      name: .aspell.conf
    actions:
      - type: migrate
        source: ${HOME}/.aspell.conf
        dest: ${XDG_CONFIG_HOME}/aspell/aspell.conf
      - type: export
        key: ASPELL_CONF
        value: per-conf ${XDG_CONFIG_HOME}/aspell/aspell.conf; personal ${XDG_CONFIG_HOME}/aspell/en.pws; repl ${XDG_CONFIG_HOME}/aspell/en.prepl

  - name: atom
    dotfile:
      name: .atom
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.atom
        dest: ${XDG_CONFIG_HOME}/atom
      - type: export
        key: ATOM_HOME
        value: ${XDG_CONFIG_HOME}/atom

  - name: aria2_dir
    description: aria2 download utility config and cache dir
    dotfile:
      name: .aria2
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.aria2/aria.conf
        dest: ${XDG_CONFIG_HOME}/aria2/aria2.conf
      - type: migrate
        source: ${HOME}/.aria2/dht.dat
        dest: ${XDG_CACHE_HOME}/aria2/dht.dat
      - type: delete
        path: ${HOME}/.aria2

  - name: aws-cli
    dotfile:
      name: .aws
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.aws
        dest: ${XDG_CONFIG_HOME}/aws
      - type: export
        key: AWS_SHARED_CREDENTIALS_FILE
        value: ${XDG_CONFIG_HOME}/aws/credentials
      - type: export
        key: AWS_CONFIG_FILE
        value: ${XDG_CONFIG_HOME}/aws/config

  - name: bash_completion
    dotfile:
      name: .bash_completion
    actions:
      - type: migrate
        source: ${HOME}/.bash_completion
        dest: ${XDG_CONFIG_HOME}/bash-completion/bash_completion
      - type: export
        key: BASH_COMPLETION_USER_FILE
        value: ${XDG_CONFIG_HOME}/bash-completion/bash_completion

  - name: bash_history
    dotfile:
      name: .bash_history
    actions:
      - type: migrate
        source: ${HOME}/.bash_history
        dest: ${XDG_CACHE_HOME}/bash/history
      - type: export
        key: HISTFILE
        value: ${XDG_CACHE_HOME}/bash/history

  - name: cargo_home
    description: Rust Cargo home dir
    dotfile:
      name: .cargo
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.cargo
        dest: ${XDG_DATA_HOME}/cargo
      - type: export
        key: CARGO_HOME
        value: ${XDG_DATA_HOME}/cargo

  - name: ccache
    description: ccache cache dir
    dotfile:
      name: .ccache
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.ccache
        dest: ${XDG_CACHE_HOME}/ccache
      - type: export
        key: CCACHE_DIR
        value: ${XDG_CACHE_HOME}/ccache

  - name: conky
    dotfile:
      name: .conkyrc
    actions:
      - type: migrate
        source: ${HOME}/.conkyrc
        dest: ${XDG_CONFIG_HOME}/conky/conkyrc
      - type: alias
        alias: conky
        command: conky --config "$XDG_CONFIG_HOME"/conky/conkyrc

  - name: claws-mail
    dotfile:
      name: ~/.claws-mail
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.claws-mail
        dest: ${XDG_DATA_HOME}/claws-mail
      - type: alias
        alias: claws-mail
        command: claws-mail --alternate-config-dir "$XDG_DATA_HOME/claws-mail"

  - name: crawl
    dotfile:
      name: .crawl
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.crawl
        dest: ${XDG_DATA_HOME}/crawl
      - type: export
        key: CRAWL_DIR
        value: ${XDG_DATA_HOME}/crawl/

  - name: cuda
    # guesswork
    dotfile:
      name: .nv
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.nv
        dest: ${XDG_CACHE_HOME}/nv
      - type: export
        key: CUDA_CACHE_PATH
        value: ${XDG_CACHE_HOME}/nv
      - type: export
        key: __GL_SHADER_DISK_CACHE_PATH
        value: ${XDG_CACHE_HOME}/nv

  - name: docker
    dotfile:
      name: .docker
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.docker
        dest: ${XDG_CONFIG_HOME}/docker
      - type: export
        key: DOCKER_CONFIG
        value: ${XDG_CONFIG_HOME}/docker

  - name: electrum
    dotfile:
      name: .electrum
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.electrum
        dest: ${XDG_DATA_HOME}/electrum
      - type: export
        key: ELECTRUMDIR
        value: ${XDG_DATA_HOME}/electrum

  - name: elinks
    dotfile:
      name: .elinks
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.elinks
        dest: ${XDG_CONFIG_HOME}/elinks
      - type: export
        key: ELINKS_CONFDIR
        value: ${XDG_CONFIG_HOME}/elinks

  - name: fontconfig
    dotfile:
      name: .fontconfig
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.fontconfig
        dest: ${XDG_DATA_HOME}/fontconfig

  - name: fonts
    dotfile:
      name: .fonts
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.fonts
        dest: ${XDG_DATA_HOME}/fonts

  - name: gdb-init
    dotfile:
      name: .gdbinit
    actions:
      - type: migrate
        source: ${HOME}/.gdbinit
        dest: ${XDG_CONFIG_HOME}/gdb/init
      - type: alias
        alias: gdb
        command: gdb -n -x $XDG_CONFIG_HOME/gdb/init

  - name: gem
    dotfile:
      name: .gem
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.gem/ruby
        dest: ${XDG_CONFIG_HOME}/gem
      - type: export
        key: GEM_HOME
        value: ${XDG_DATA_HOME}/gem
      - type: migrate
        source: ${HOME}/.gem/specs
        dest: ${XDG_CACHE_HOME}/gem
      - type: export
        key: GEM_SPEC_CACHE
        value: ${XDG_CACHE_HOME}/gem

  - name: gitconfig
    dotfile:
      name: .gitconfig
    actions:
      - type: migrate
        source: ${HOME}/.gitconfig
        dest: ${XDG_CONFIG_HOME}/git/config

  - name: gnupg
    dotfile:
      name: .gnupg
      is_dir: true
    notes:
      - You may have to restart gpg-agent with 'gpgconf --kill gpg-agent'
    actions:
      - type: migrate
        source: ${HOME}/.gnupg
        dest: ${XDG_DATA_HOME}/gnupg
      - type: export
        key: GNUPGHOME
        value: ${XDG_DATA_HOME}/gnupg

  - name: gtk1
    dotfile:
      name: .gtkrc
    actions:
      - type: migrate
        source: ${HOME}/.gtkrc
        dest: ${XDG_CONFIG_HOME}/gtk-1.0/gtkrc
      - type: export
        key: GTK_RC_FILES
        value: ${XDG_CONFIG_HOME}/gtk-1.0/gtkrc

  - name: gtk2
    dotfile:
      name: .gtkrc-2.0
    actions:
      - type: migrate
        source: ${HOME}/.gtkrc-2.0
        dest: ${XDG_CONFIG_HOME}/gtk-2.0/gtkrc
      - type: export
        key: GTK2_RC_FILES
        value: ${XDG_CONFIG_HOME}/gtk-2.0/gtkrc

  - name: gradle
    dotfile:
      name: .gradle
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.gradle
        dest: ${XDG_DATA_HOME}/gradle
      - type: export
        key: GRADLE_USER_HOME
        value: ${XDG_DATA_HOME}/gradle

  - name: hledger
    dotfile:
      name: .hledger.journal
    actions:
      - type: migrate
        source: ${HOME}/.hledger.journal
        dest: ${XDG_DATA_HOME}/hledger/journal
      - type: export
        key: LEDGER_FILE
        value: ${XDG_DATA_HOME}/hledger/journal

  - name: httpie
    dotfile:
      name: .httpie
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.httpie
        dest: ${XDG_CONFIG_HOME}/httpie

  - name: imapfilter
    dotfile:
      name: .imapfilter
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.imapfilter
        dest: ${XDG_CONFIG_HOME}/imapfilter
      - type: export
        key: IMAPFILTER_HOME
        value: ${XDG_CONFIG_HOME}/imapfilter

  - name: irssi
    dotfile:
      name: .irssi
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.irssi
        dest: ${XDG_CONFIG_HOME}/irssi
      - type: alias
        alias: irssi
        command: irssi --home ${XDG_CONFIG_HOME}/irssi

  - name: isync
    dotfile:
      name: .mbsyncrc
    actions:
      - type: migrate
        source: ${HOME}/.mbsyncrc
        dest: ${XDG_CONFIG_HOME}/isync/mbsyncrc
      - type: alias
        alias: mbsync
        command: mbsync -c ${XDG_CONFIG_HOME}/isync/mbsyncrc

  - name: k9s
    dotfile:
      name: .k9s
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.k9s
        dest: ${XDG_CONFIG_HOME}/k9s
      - type: export
        key: K9SCONFIG
        value: ${XDG_CONFIG_HOME}/k9s

  - name: kde
    dotfile:
      name: .kde
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.kde
        dest: ${XDG_CONFIG_HOME}/kde
      - type: export
        key: KDEHOME
        value: ${XDG_CONFIG_HOME}/kde

  - name: lein
    dotfile:
      name: .lein
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.lein
        dest: ${XDG_DATA_HOME}/lein
      - type: export
        key: LEIN_HOME
        value: ${XDG_DATA_HOME}/lein

  - name: less
    dotfile:
      name: .lesshst
    actions:
      - type: migrate
        source: ${HOME}/.lesshst
        dest: ${XDG_CACHE_HOME}/less/history
      - type: export
        key: LESSHISTFILE
        value: ${XDG_CACHE_HOME}/less/history
      - type: export
        key: LESSKEY
        value: ${XDG_CONFIG_HOME}/less/lesskey

  - name: libx11-xcompose
    dotfile:
      name: .XCompose
    actions:
      - type: migrate
        source: ${HOME}/.XCompose
        dest: ${XDG_CONFIG_HOME}/X11/xcompose
      - type: export
        key: XCOMPOSEFILE
        value: ${XDG_CONFIG_HOME}/X11/xcompose

  - name: libx11-xcompose-cache
    dotfile:
      name: .compose-cache
    actions:
      - type: migrate
        source: ${HOME}/.compose-cache
        dest: ${XDG_CACHE_HOME}/X11/xcompose
      - type: export
        key: XCOMPOSECACHE
        value: ${XDG_CACHE_HOME}/X11/xcompose

  - name: lnav
    dotfile:
      name: .lnav
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.lnav
        dest: ${XDG_CONFIG_HOME}/lnav

  - name: ltrace
    dotfile:
      name: .ltrace.conf
    actions:
      - type: migrate
        source: ${HOME}/.ltrace.conf
        dest: ${XDG_CONFIG_HOME}/ltrace/ltrace.conf
      - type: alias
        alias: ltrace
        command: ltrace -F "$XDG_CONFIG_HOME"/ltrace/ltrace.conf

  - name: mapscii
    dotfile:
      name: .mapscii
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.mapscii
        dest: ${XDG_CACHE_HOME}/mapscii

  - name: mathematica
    dotfile:
      name: .Mathematica
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.Mathematica
        dest: ${XDG_CONFIG_HOME}/mathematica
      - type: export
        key: MATHEMATICA_USERBASE
        value: ${XDG_CONFIG_HOME}/mathematica

  - name: maxima
    dotfile:
      name: .maxima
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.maxima
        dest: ${XDG_CONFIG_HOME}/maxima
      - type: export
        key: MAXIMA_USERDIR
        value: ${XDG_CONFIG_HOME}/maxima

  - name: mednafen
    dotfile:
      name: .mednafen
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.mednafen
        dest: ${XDG_CONFIG_HOME}/mednafen
      - type: export
        key: MEDNAFEN_HOME
        value: ${XDG_CONFIG_HOME}/mednafen

  - name: mitmproxy
    dotfile:
      name: .mitmproxy
    actions:
      - type: migrate
        source: ${HOME}/.mitmproxy
        dest: ${XDG_CONFIG_HOME}/mitmproxy
      - type: alias
        alias: mitmproxy
        command: mitmproxy --set confdir=${XDG_CONFIG_HOME}/mitmproxy
      - type: alias
        alias: mitmweb
        command: mitmweb --set confdir=${XDG_CONFIG_HOME}/mitmproxy

  - name: monero
    dotfile:
      name: .bitmonero
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.bitmonero
        dest: ${XDG_DATA_HOME}/bitmonero
      - type: alias
        alias: monerod
        command: monerod --data-dir ${XDG_DATA_HOME}/bitmonero

  - name: most
    dotfile:
      name: .mostrc
    actions:
      - type: migrate
        source: ${HOME}/.mostrc
        dest: ${XDG_CONFIG_HOME}/most/mostrc
      - type: export
        key: MOST_INITFILE
        value: ${XDG_CONFIG_HOME}/most/mostrc

  - name: mplayer
    dotfile:
      name: .mplayer
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.mplayer
        dest: ${XDG_CONFIG_HOME}/mplayer
      - type: export
        key: MPLAYER_HOME
        value: ${XDG_CONFIG_HOME}/mplayer

  - name: mysql_history
    dotfile:
      name: .mysql_history
    actions:
      - type: migrate
        source: ${HOME}/.mysql_history
        dest: ${XDG_DATA_HOME}/mysql_history
      - type: export
        key: MYSQL_HISTFILE
        value: ${XDG_DATA_HOME}/mysql_history

  - name: ncurses
    dotfile:
      name: .terminfo
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.terminfo
        dest: ${XDG_DATA_HOME}/terminfo
      - type: export
        key: TERMINFO
        value: ${XDG_DATA_HOME}/terminfo
      - type: export
        key: TERMINFO_DIRS
        value: ${XDG_DATA_HOME}/terminfo:/usr/share/terminfo

  - name: ncmpc
    dotfile:
      name: .ncmpc
    actions:
      - type: migrate
        source: ${HOME}/.ncmpc
        dest: ${XDG_CONFIG_HOME}/ncmpc/config
      - type: alias
        alias: ncmpc
        command: ncmpc -f ${XDG_CONFIG_HOME}/ncmpc/config

  - name: netbeans
    dotfile:
      name: .netbeans
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.netbeans
        dest: ${XDG_CONFIG_HOME}/netbeans
      - type: alias
        alias: netbeans
        command: netbeans --userdir ${XDG_CONFIG_HOME}/ncmpc/config

  - name: node_repl_history
    dotfile:
      name: .node_repl_history
    actions:
      - type: migrate
        source: ${HOME}/.node_repl_history
        dest: ${XDG_CACHE_HOME}/node_repl_history
      - type: export
        key: NODE_REPL_HISTORY
        value: ${XDG_CACHE_HOME}/node_repl_history

  - name: npm
    dotfile:
      name: .npm
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.npm
        dest: ${XDG_CACHE_HOME}/npm
      - type: export
        key: npm_config_cache
        value: ${XDG_CACHE_HOME}/npm

  - name: npmrc
    dotfile:
      name: .npmrc
    actions:
      - type: migrate
        source: ${HOME}/.npmrc
        dest: ${XDG_CONFIG_HOME}/npm/npmrc
      - type: export
        key: NPM_CONFIG_USERCONFIG
        value: ${XDG_CONFIG_HOME}/npm/npmrc

  - name: nvidia-settings
    dotfile:
      name: .nvidia-settings-rc
    actions:
      - type: migrate
        source: ${HOME}/.nvidia-settings-rc
        dest: ${XDG_CONFIG_HOME}/nvidia/settings
      - type: alias
        alias: nvidia-settings
        command: nvidia-settings --config=${XDG_CONFIG_HOME}/nvidia/settings

  - name: nvm
    dotfile:
      name: .nvm
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.nvm
        dest: ${XDG_DATA_HOME}/nvm
      - type: export
        key: NVM_DIR
        value: ${XDG_DATA_HOME}/nvm

  - name: parallel
    dotfile:
      name: .parallel
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.parallel
        dest: ${XDG_CONFIG_HOME}/parallel
      - type: export
        key: PARALLEL_HOME
        value: ${XDG_CONFIG_HOME}/parallel

  - name: pass
    dotfile:
      name: .password-store
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.password-store
        dest: ${XDG_DATA_HOME}/pass
      - type: export
        key: PASSWORD_STORE_DIR
        value: ${XDG_DATA_HOME}/pass

  - name: pex
    dotfile:
      name: .pex
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.pex
        dest: ${XDG_CACHE_HOME}/pex
      - type: export
        key: PEX_ROOT
        value: ${XDG_CACHE_HOME}/pex

  - name: setuptools
    dotfile:
      name: .python-eggs
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.python-eggs
        dest: ${XDG_CACHE_HOME}/python-eggs
      - type: export
        key: PYTHON_EGG_CACHE
        value: ${XDG_CACHE_HOME}/python-eggs

  - name: pylint
    dotfile:
      name: .pylint.d
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.pylint.d
        dest: ${XDG_CACHE_HOME}/pylint
      - type: export
        key: PYLINTHOME
        value: ${XDG_CACHE_HOME}/pylint

  - name: racket
    dotfile:
      name: .racket
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.racket
        dest: ${XDG_CONFIG_HOME}/racket

  - name: readline
    dotfile:
      name: .inputrc
    actions:
      - type: migrate
        source: ${HOME}/.inputrc
        dest: ${XDG_CONFIG_HOME}/readline/inputrc
      - type: export
        key: INPUTRC
        value: ${XDG_CONFIG_HOME}/readline/inputrc

  - name: rustup
    dotfile:
      name: .rustup
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.rustup
        dest: ${XDG_DATA_HOME}/rustup
      - type: export
        key: RUSTUP_HOME
        value: ${XDG_DATA_HOME}/rustup

  - name: screen
    dotfile:
      name: .screenrc
    actions:
      - type: migrate
        source: ${HOME}/.screenrc
        dest: ${XDG_CONFIG_HOME}/screen/screenrc
      - type: export
        key: SCREENRC
        value: ${XDG_CONFIG_HOME}/screen/screenrc

  - name: simplescreenrecorder
    dotfile:
      name: .ssr
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.ssr
        dest: ${XDG_DATA_HOME}/.simplescreenrecorder

  - name: stack
    dotfile:
      name: .stack
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.stack
        dest: ${XDG_DATA_HOME}/stack
      - type: export
        key: STACK_ROOT
        value: ${XDG_DATA_HOME}/stack

  - name: task
    dotfile:
      name: .task
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.task
        dest: ${XDG_DATA_HOME}/task
      - type: export
        key: TASKDATA
        value: ${XDG_DATA_HOME}/task

  - name: taskrc
    dotfile:
      name: .taskrc
    actions:
      - type: migrate
        source: ${HOME}/.taskrc
        dest: ${XDG_CONFIG_HOME}/task/taskrc
      - type: export
        key: TASKRC
        value: ${XDG_CONFIG_HOME}/task/taskrc

  - name: tig-history
    description: tig git explorer history file
    dotfile:
      name: .tig_history
    actions:
      - type: migrate
        source: ${HOME}/.tig_history
        dest: ${XDG_DATA_HOME}/tig/history

  - name: uncrustify
    dotfile:
      name: .uncrustify.cfg
    actions:
      - type: migrate
        source: ${HOME}/.uncrustify.cfg
        dest: ${XDG_CONFIG_HOME}/uncrustify/uncrustify.cfg
      - type: export
        key: UNCRUSTIFY_CONFIG
        value: ${XDG_CONFIG_HOME}/uncrustify/uncrustify.cfg

  - name: unison
    dotfile:
      name: .unison
    actions:
      - type: migrate
        source: ${HOME}/.unison
        dest: ${XDG_DATA_HOME}/unison
      - type: export
        key: UNISON
        value: ${XDG_DATA_HOME}/unison

  - name: weechat
    dotfile:
      name: .weechat
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.weechat
        dest: ${XDG_CONFIG_HOME}/weechat
      - type: export
        key: WEECHAT_HOME
        value: ${XDG_CONFIG_HOME}/weechat
      - type: alias
        alias: weechat
        command: weechat -d ${XDG_CONFIG_HOME}/weechat

  - name: yarn
    dotfile:
      name: .yarn
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.yarn/link
        dest: ${XDG_DATA_HOME}/yarn/link
      - type: migrate
        source: ${HOME}/.yarn/global
        dest: ${XDG_DATA_HOME}/yarn/global
      - type: migrate
        source: ${HOME}/.yarn/config
        dest: ${XDG_CONFIG_HOME}/yarn/config
      - type: delete
        path: ${HOME}/.yarn

  - name: yarnrc
    dotfile:
      name: .yarnrc
    actions:
      - type: migrate
        source: ${HOME}/.yarnrc
        dest: ${XDG_CONFIG_HOME}/yarn/config

  - name: qrcp
    dotfile:
      name: .qrcp
    actions:
      - type: migrate
        source: ${HOME}/.qrcp
        dest: ${XDG_CONFIG_HOME}/qrcp/config.json

  - name: cabal
    dotfile:
      name: .cabal
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.cabal/config
        dest: ${XDG_CONFIG_HOME}/cabal/config
      - type: migrate
        source: ${HOME}/.cabal/
        dest: ${XDG_CACHE_HOME}/cabal/
      - type: export
        key: CABAL_CONFIG
        value: ${XDG_CONFIG_HOME}/cabal/config
      - type: export
        key: CABAL_DIR
        value: ${XDG_CACHE_HOME}/cabal/

  - name: opam
    dotfile:
      name: .opam
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.opam
        dest: ${XDG_DATA_HOME}/opam
      - type: export
        key: OPAMROOT
        value: ${XDG_DATA_HOME}/opam

  - name: chez
    dotfile:
      name: .chezscheme_history
    actions:
      - type: migrate
        source: ${HOME}/.chezscheme_history
        dest: ${XDG_DATA_HOME}/chezscheme/history
      - type: alias
        alias: petite
        command: petite --eehistory ${XDG_DATA_HOME}/chezscheme/history
      - type: alias
        alias: scheme
        command: scheme --eehistory ${XDG_DATA_HOME}/chezscheme/history

  - name: go
    dotfile:
      name: go
      is_dir: true
    notes:
      - You will need to manually delete the original directory at `~/go` because of permissions.
    actions:
      - type: migrate
        source: ${HOME}/go/
        dest: ${XDG_DATA_HOME}/go/
      - type: export
        key: GOPATH
        value: ${XDG_DATA_HOME}/go

  - name: z
    dotfile:
      name: .z
    actions:
      - type: migrate
        source: ${HOME}/.z
        dest: ${XDG_CACHE_HOME}/z
      - type: export
        key: _Z_DATA
        value: ${XDG_CACHE_HOME}/z

  - name: perl
    dotfile:
      name: perl5
      is_dir: true
    actions:
      - type: export
        key: PERL5LIB
        value: ${XDG_DATA_HOME}/perl/lib/perl5${PERL5LIB:+:${PERL5LIB}}
      - type: export
        key: PERL_LOCAL_LIB_ROOT
        value: ${XDG_DATA_HOME}/perl${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}
      - type: export
        key: PERL_MB_OPT
        value: --install_base \"${XDG_DATA_HOME}/perl\"
      - type: export
        key: PERL_MM_OPT
        value: INSTALL_BASE=${XDG_DATA_HOME}/perl
      - type: migrate
        source: ${HOME}/perl5
        dest: ${XDG_DATA_HOME}/perl

  - name: cpanm
    dotfile:
      name: .cpanm
      is_dir: true
    actions:
      - type: migrate
        source: ${HOME}/.cpanm
        dest: ${XDG_DATA_HOME}/cpanm
      - type: export
        key: PERL_CPANM_HOME
        value: ${XDG_DATA_HOME}/cpanm
